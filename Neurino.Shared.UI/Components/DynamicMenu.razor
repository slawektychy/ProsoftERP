@using Neurino.Core
@using Microsoft.AspNetCore.Components.Routing
@using Neurino.Core.Atributes
@using Neurino.Core.Models

@using System.Reflection
@using System.Collections.ObjectModel


@inject ApplicationContext AppContext

<div id="accordionMenu" class="flex-column">
    @foreach (var group in _menuGroups)
    {
        var collapseId = $"collapse_{group.Title.Replace(' ','_')}";

    <div class="nav-item px-3 mb-2">
        <a class="nav-link" data-bs-toggle="collapse" href="#@collapseId" role="button">
            @group.Title
        </a>
        <div class="collapse ps-3" id="@collapseId" data-bs-parent="#accordionMenu">
            @foreach (var item in group.Items)
                {
                    <NavLink class="nav-link" href="@item.Link" Match="NavLinkMatch.All">@item.Title</NavLink>
                }
            </div>
        </div>
    }
</div>

@code {
    

    List<MenuGroup> _menuGroups { get; set; } = new();

    protected override void OnInitialized()
    {
        AppContext.MenuChanged += OnMenuChanged;
    }

    private void OnMenuChanged()
    {

        ObservableCollection<Type> MenuRegistredClasses = new ObservableCollection<Type>(AppContext.GetMenuItems());
        foreach (var type in MenuRegistredClasses)
        {
            var attr = type.GetCustomAttribute<MenuRegistrationAttribute>();
            string menuPath = attr.MenuPath;

            string[] items = menuPath.Split('/');
            var menuGroup = _menuGroups.Where(mg => mg.Title == items[0]).FirstOrDefault();
            if (menuGroup == null)
            {
                menuGroup = new MenuGroup { Title = items[0] };
                _menuGroups.Add(menuGroup);
            }
            menuGroup.Items.Add(new MenuItem
                {
                    Title = items[1],
                    Link = $"/"
                });
        }

        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        AppContext.MenuChanged -= OnMenuChanged;
    }
}